-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

CREATE TABLE public.categories
(
    id Serial NOT NULL,
    name character varying(30),
    cat_description character varying(30),
    PRIMARY KEY (id)
);

CREATE TABLE public.users_level
(
    id Serial NOT NULL,
    user_id integer NOT NULL,
    level integer NOT NULL,
    changed_date timestamp with time zone,
    created_date timestamp with time zone,
    PRIMARY KEY (id)
);

CREATE TABLE public.users_status
(
    id Serial NOT NULL,
    user_id integer NOT NULL,
    status integer NOT NULL,
    changed_date timestamp with time zone,
    created_date timestamp with time zone,
    PRIMARY KEY (id)
);

CREATE TABLE public.users_newsletter
(
    id integer NOT NULL DEFAULT nextval('newsletter_id_seq'::regclass),
    email character varying(50) COLLATE pg_catalog."default",
    "timestamp" timestamp with time zone,
    city character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT newsletter_pkey PRIMARY KEY (id),
    CONSTRAINT newsletter_email_key UNIQUE (email)
)

CREATE TABLE public.companies_newsletter
(
    id integer NOT NULL DEFAULT nextval('company_newsletter_id_seq'::regclass),
    email character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "timestamp" time with time zone NOT NULL,
    city character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT company_newsletter_pkey PRIMARY KEY (id)
)

CREATE TABLE public.companies
(
    company_id Serial NOT NULL,
    name character varying(50),
    phone_number integer,
    address character varying(100),
    city character varying(50),
    country character varying(50),
    changed_date timestamp with time zone,
    created_date timestamp with time zone,
    email character varying(50),
    password character varying(150),
    image character varying(150),
    PRIMARY KEY (company_id),
    UNIQUE (email)
);

CREATE TABLE public.extra_job_applications
(
    id Serial NOT NULL,
    user_id integer NOT NULL,
    extra_shift_id integer NOT NULL,
    status character varying(255) NOT NULL,
    changed_date timestamp with time zone,
    created_date timestamp with time zone,
    PRIMARY KEY (id)
);

CREATE TABLE public.extra_jobs
(
    id Serial NOT NULL,
    company_id integer NOT NULL,
    title character varying(255) NOT NULL,
    description character varying(255) NOT NULL,
    city character varying(50) NOT NULL,
    image character varying(50) NOT NULL,
    company_name character varying(50) NOT NULL,
    salary double precision NOT NULL,
    category character varying(255) NOT NULL,
    address character varying(255) NOT NULL,
    coordinate_long double precision NOT NULL,
    coordinate_let double precision NOT NULL,
    date date NOT NULL,
    "timestamp" date,
    PRIMARY KEY (id)
);

CREATE TABLE public.shifts
(
    id Serial NOT NULL,
    extra_job_id integer NOT NULL,
    date date NOT NULL,
    init_time time(0) without time zone NOT NULL,
    finish_time time(0) without time zone NOT NULL,
    "timestamp" date
);

CREATE TABLE public.users_account
(
    user_id Serial NOT NULL,
    name character varying(50),
    phone_number integer,
    about_me character varying(400),
    address character varying(100),
    email character varying(50),
    password character varying(100),
    coordinate_long real,
    coordinate_lat real,
    creation_date date,
    image character varying(100),
    country character varying(50),
    city character varying(50),
    birth_date date,
    driving_license boolean,
    date date,
    PRIMARY KEY (user_id),
    UNIQUE (email)
);

CREATE TABLE public.users_experience
(
    id Serial NOT NULL,
    user_id integer,
    user_experience_description character varying(100),
    job_category character varying(100),
    "timestamp" date,
    PRIMARY KEY (id)
);

ALTER TABLE public.extra_job_applications
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users_account (user_id)
    NOT VALID;


ALTER TABLE public.shifts
    ADD FOREIGN KEY (extra_job_id)
    REFERENCES public.extra_jobs (id)
    NOT VALID;


ALTER TABLE public.users_experience
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users_account (user_id)
    NOT VALID;

ALTER TABLE public.users_level
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users_account (user_id)
    NOT VALID;

ALTER TABLE public.users_status
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users_account (user_id)
    NOT VALID;

ALTER TABLE users_experience
   ADD  CONSTRAINT users_experience_id_fkey
   FOREIGN KEY (user_id) REFERENCES users_account (user_id) ON DELETE CASCADE;

ALTER TABLE users_level
   ADD  CONSTRAINT users_level_id_fkey
   FOREIGN KEY (user_id) REFERENCES users_account (user_id) ON DELETE CASCADE;

ALTER TABLE users_status
   ADD  CONSTRAINT users_status_id_fkey
   FOREIGN KEY (user_id) REFERENCES users_account (user_id) ON DELETE CASCADE;

ALTER TABLE extra_job_applications
   ADD  CONSTRAINT extra_job_applications_extra_shift_id_fkey
   FOREIGN KEY (extra_shift_id) REFERENCES shifts (id) ON DELETE CASCADE;

ALTER TABLE public.extra_jobs
    ADD CONSTRAINT extra_jobs_company_id_fkey
    FOREIGN KEY (company_id) REFERENCES companies (company_id) ON DELETE CASCADE;

ALTER TABLE public.shifts
    ADD CONSTRAINT shifts_extra_job_id_fkey
    FOREIGN KEY (extra_job_id) REFERENCES public.extra_jobs (id) ON DELETE CASCADE;

END;